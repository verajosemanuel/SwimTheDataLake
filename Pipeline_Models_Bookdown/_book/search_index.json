[["index.html", "Pipeline de Modelos Bienvenidos", " Pipeline de Modelos Allianz Direct Data Science Spain 2020-11-20 Bienvenidos Bienvenidos al bookdown que documenta el pipeline de modelos. workflow "],["QuickIntro.html", "Chapter 1 Breve intro a BookDown", " Chapter 1 Breve intro a BookDown https://bookdown.org/yihui/rmarkdown/ This is a sample book written in Markdown. You can use anything that Pandocs Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter ??. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2020) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). Enlace a la documentacion del formato "],["entorno-renv.html", "Chapter 2 Entorno 2.1 renv workflow 2.2 pacman 2.3 here 2.4 Logs", " Chapter 2 Entorno Para lograr estabilidad en los entornos y ayudar a la escalabilidad y reproducibilidad del código recomendamos una serie de paquetes de reconocido prestigio y amplio uso. Para la estabilidad de los entornos {renv} Para la gestion de paquetería se recomienda {pacman} Para la fácil localización de rutas de ficheros dentro de proyectis {here} Para el archivado de logs {futile.logger} y {tidylog} Pasamos a describir sucintamente cada uno de ellos. 2.1 renv workflow El paquete es muy sencillo. Su funcionamiento básico consiste en generar una foto fija del estado de los paquetes (versionado) para impedir que las futuras actualizaciones rompan el código que está funcionando. En un estilo a lo que permite Git con el código, pero en este caso con todo el ecosistema de paquetes de R. Los pasos para usarlo son muy sencillos: ejecutar renv::init() para inicializar el proyecto. Esto genera una librería privada y exclusiva para el proyecto, Trabajar de manera normal, instalando y eliminando paquetes segun sea necesario. Cuando esté todo funcionando a nuestro gusto, ejecutamos renv::snapshot() para salvar el estado de las librerias en el lockfile (renv.lock), Continuamos trabajando de manera normal, con el habitual trasiego de paquetes instalados y desinstalados. Ejecutamos renv::snapshot() de nuevo para salvar el estado de la librería si todo funciona a nuestro gusto. En caso de que algo falle, solamente hay que llamar a renv::restore() para revertir la librería al estado anterior. Dejo aqui los enlaces a la documentación del paquete: renv documentation 2.2 pacman La carga de paquetes cuando se mueven los scripts de entorno, conlleva una adecuada gestión de los mismos. Colaborando con {renv} podemos facilitar mucho el uso y la colaboración si incluimos {pacman} al inicio de cada script de este modo: if (!require(devtools)) { install.packages(&quot;devtools&quot;, repos = &quot;http://cran.rstudio.com/&quot;) } if (!require(pacman)) { install.packages(&quot;pacman&quot;, repos = &quot;http://cran.rstudio.com/&quot;) } pacman::p_load(tidyverse, rio, skimr, stringr, summarytools, tibble, tidylog, reactable, futile.logger) pacman comprueba si el paquete está presente en la librería, y lo carga en memoria. Al mismo tiempo, si el paquete no existe, lo instala de manera automática. Además tiene muchas otras funciones para gestionar nuestra librería. Documentación de Pacman http://trinker.github.io/pacman/vignettes/Introduction_to_pacman.html 2.3 here Siempre es una locura estar localizando ficheros de entrada o de salida en nuestro código. {here} facilita nuestra tarea convirtiéndose en un gestor de ficheros tomando como raiz el proyecto en el que estemos trabajando, permitiendonos gestionar de manera transparente los diferentes paths utilizados. Por ejemplo, aqui definimos el fichero de entrada de datos sin preocuparnos de dónde se encuentre dentro de nuestro proyecto. No hace falta hacer el consabido setwd() que puede además traer problemas y está desaconsejado. Definición de la ruta a un fichero: pacman::p_load(here) ruta_entrada &lt;- here::here(&#39;data.csv&#39;) Definición de ruta a un directorio y lectura de un fichero: here(&quot;one&quot;, &quot;two&quot;, &quot;awesome.txt&quot;) #&gt; [1] &quot;/Users/jvera/proyectos/one/two/awesome.txt&quot; # cat(readLines(here(&quot;one&quot;, &quot;two&quot;, &quot;awesome.txt&quot;))) #&gt; hola chicos que tal?! Documentación del paquete {here} https://here.r-lib.org/ 2.4 Logs Para el seguimiento de las operaciones, tanto en el momento del desarrollo como en las investigaciones posteriores, es muy útil contar con el concurso de los logs a disco. Tener un log nos permite siempre ver en tiempo real cómo está funcionando la aplicación y además guardar constancia de las anteriores ejecuciones en caso de problemas. Para ello podemos utilizar 2 paquetes ampliamente usados para estos menesteres: {futile.logger} y {tidylog} Con este simple snippet de código tendremos siempre volcadas a disco todas las operaciones. De manera automática en el caso de {tidylog} y de manera manual a nuestra discrección en el caso de {futile.logger} La única precaución a tomar es que {tidylog} debe ser siempre el último paquete cargado. pacman::p_load(here, tidyverse, futile.logger, tidylog) # definimos la ruta al log dentro de nuestro proyecto # ruta_log &lt;- here::here(&#39;nombre-proyecto.log&#39;) # si el fichero no existe, lo crea # if (!file.exists(ruta_log)) { file.create(ruta_log) } # Creamos una instancia del gestor del log # invisible(futile.logger::flog.appender(appender.file(ruta_log))) # asignamos a la función de error una salida que vuelque al log los errores # options(error = function() { flog.error(geterrmessage()) ; traceback() ; stop() }) # asignamos el volcado de los procesos automaticos al fichero en disco # tidylog_to_file &lt;- function(text) flog.info(text) options(&quot;tidylog.display&quot; = list(message, tidylog_to_file)) # ejemplo de volcado personalizado al log # flog.info(&quot;################## PROGRAM STARTED ########################&quot;) flog.info(Sys.time()) # el resto de operaciones de dplyr se van volcando de manera automatica al log. Disponemos de diferents appenders con diferentes niveles de criticidad según queramos dar más o menos énfasis: flog.info(&quot;esto es un mensaje informativo &quot;) flog.error(&quot;Esto es un error&quot;) flog.warn(&quot;esto es una alerta&quot;) Documentacion de los dos paquetes tidylog https://github.com/elbersb/tidylog futile.logger https://cartesianfaith.com/2013/03/10/better-logging-in-r-aka-futile-logger-1-3-0-released/ Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.org/knitr/. . 2020. Bookdown: Authoring Books and Technical Documents with r Markdown. https://github.com/rstudio/bookdown. "]]
